const express=require("express"),OpenAI=require("openai"),axios=require("axios"),bodyParser=require("body-parser"),fetch=require("node-fetch"),path=require("path");require("dotenv").config();const app=express(),port=3e3,openai=new OpenAI({apiKey:process.env.OPENAI_API_KEY}),calendarUrl="https://www.atg.se/services/racinginfo/v1/api/calendar/day/2024-12-14",raceUrl="https://www.atg.se/services/racinginfo/v1/api/races/123456";let data={};async function fetchData(){try{const calendarResponse=await axios.get(calendarUrl),raceResponse=await axios.get(raceUrl);data.calendar=calendarResponse.data,data.race=raceResponse.data,console.log("Fetched data:",data)}catch(error){console.error("Error fetching data:",error.response?error.response.data:error.message)}}function getHorseInfo(){const horses=data.race&&data.race.horses?data.race.horses:[];return horses.length<2?"There are not enough horses available this week.":`This week there are two horses. They are: ${horses[0].name} with the odds ${horses[0].odds} and ${horses[1].name} with the odds ${horses[1].odds}.`}function getDriverInfo(){const drivers=data.race&&data.race.drivers?data.race.drivers:[];return drivers.length<2?"There are not enough drivers available this week.":`This week there are drivers. They are 1: ${drivers[0].name} and 2: ${drivers[1].name}.`}fetchData(),setInterval(fetchData,36e5);const functionMapping={get_driver_info:getDriverInfo,get_horse_info:getHorseInfo},tools=[{type:"function",function:{name:"get_horse_info",description:"Get the current horses in this week's race.",parameters:{}}},{type:"function",function:{name:"get_driver_info",description:"Get information about the drivers in the current race.",parameters:{}}}];async function run(){await fetchData();const completion=await openai.chat.completions.create({model:"gpt-4o-mini",messages:[{role:"system",content:"You are a gambling expert called Leila. Your mission is to help people gamble on horses. There are two horses in this weeks race."},{role:"user",content:"who is the johan Smith?"}],tools:tools,store:!0});if(console.log(completion.choices[0].message),!completion.choices[0].message.content){const functionName=completion.choices[0].message.tool_calls[0].function.name,data=functionMapping[functionName]();console.log("Found this data:"),console.log(data);const completion_2=await openai.chat.completions.create({model:"gpt-4o-mini",messages:[{role:"system",content:"You are a gambling expert called Leila. Your mission is to help people gamble on horses. There are two horses in this weeks race. You can possibly find the answer in this data: "+data},{role:"user",content:"Vilka kuskar deltar i veckans lopp?"}],store:!0});console.log(completion_2.choices[0].message.content)}}run(),app.use(bodyParser.json()),app.use(express.static("public")),app.use("/public",express.static(path.join(__dirname,"public"),{setHeaders:(res,filePath)=>{".js"===path.extname(filePath)&&res.setHeader("Content-Type","application/javascript")}})),app.post("/api/chat",async(req,res)=>{const{question:question}=req.body,tableData=data.race&&data.race.horses?data.race.horses.map(horse=>({name:horse.name,age:horse.age,sex:horse.sex,shoes:horse.shoes?"Shoes On":"Shoes Off",sulky:horse.sulky.type.engText,trainer:`${horse.trainer.firstName} ${horse.trainer.lastName}`,number:horse.number,distance:`${horse.distance}m`})):[],messages=[{role:"system",content:"You are a gambling expert called Leila. Your mission is to help people gamble on horses. Here is the data:"},{role:"system",content:JSON.stringify(tableData,null,2)},{role:"user",content:question}];try{const openaiResponse=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${process.env.OPENAI_API_KEY}`},body:JSON.stringify({model:"gpt-3.5-turbo",messages:messages,max_tokens:150})}),openaiData=await openaiResponse.json();if(openaiData.choices&&openaiData.choices.length>0){const answer=openaiData.choices[0].message.content.trim();res.json({answer:answer})}else console.error("Invalid response from OpenAI API:",openaiData),res.status(500).json({error:"Invalid response from OpenAI API"})}catch(error){console.error("Error calling OpenAI API:",error),res.status(500).json({error:"Error calling OpenAI API"})}}),app.listen(3e3,()=>{console.log("Server is running on http://localhost:3000")});